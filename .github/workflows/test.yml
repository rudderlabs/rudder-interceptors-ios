name: 'Tests & Coverage'
on:
  workflow_dispatch:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']
    types: ['opened', 'reopened', 'synchronize']

jobs:
  build:
    name: 'Tests & Coverage'
    runs-on: macos-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Cocoapods cache
        uses: actions/cache@v3
        id: cocoapods-cache
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v2
        
      - name: Install xcpretty
        run: gem install xcpretty

      - name: Install Cocoapods
        run: gem install cocoapods
        
      - name: Pod Install
        if: steps.cocoapods-cache.outputs.cache-hit != 'true'
        run: pod install --repo-update

      - name: Run build-wrapper
        run: |
          build-wrapper-macosx-x86 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} xcodebuild -workspace RudderOneTrust.xcworkspace -scheme RudderOneTrustiOS -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 13' | xcpretty
          
      - name: Run tests(suite)
        run: |
          xcodebuild -workspace RudderOneTrust.xcworkspace -scheme RudderOneTrustiOS test -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 13' -enableCodeCoverage YES -derivedDataPath build | xcpretty
      - name: Collect coverage into one XML report
        run: |
          bash xccov-to-generic.sh build/Logs/Test/*.xcresult/ > generic-coverage.xml
                    
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner -Dsonar.host.url=https://sonarcloud.io
